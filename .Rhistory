# print-friendly
ggplot(df, aes(x, y)) +
geom_point() +
theme_bw
## Themes: themes further customize the appreance of plots
# print-friendly
ggplot(df, aes(x, y)) +
geom_point() +
theme_bw()
library(ggthemes)
# labels via labs
ggplot(df, aes(x, y)) +
geom_point() +
labs(x = "x-axis" , y = "y-axis")
list_of_packages <- c("knitr",
"tidyverse",
"caret",
"e1071",
"ggplot2",
"forcats",
"dplyr",
"lmtest",
"car",
"pROC",
"arules",
"arulesViz",
# "ElemStatLearn",
"ISLR",
"glmnet",
"gam",
"class",
"nnet",
"rpart",
"party",
"partykit",
"randomForest",
"ROCR",
"boot",
"bayesboot",
"mboost",
"ada",
"MDPtoolbox",
"tm",
"SnowballC",
"ggmap",
"plyr",
"ggthemes",
"reshape",
"nycflights13",
"kohonen"
)
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if (length(new_packages) > 0) install.packages(new_packages)
## Themes: themes further customize the appearance of plots
# print-friendly
ggplot(df, aes(x, y)) +
geom_point() +
theme_bw()
# can get more themes but need to download the package
library(ggthemes)
# labels via labs
ggplot(df, aes(x, y)) +
geom_point() +
labs(x = "x-axis" , y = "y-axis")
ggplot(mpg, aes(displ, hwy)) + geom_point() + theme_economist()
a2 <- data.frame(cbind(height, shoe_size))
# Generate Matrices by combining vectors Dataframe
height <- c(163, 186, 172)
shoe_size <- c(39, 44, 41)
a2 <- data.frame(cbind(height, shoe_size))
View(a2)
View(a2)
{
print(i)
}
for (i in 4:7) {
print(i)
}
3.5 * (4 + 2)
16 / 3
0 / 0
3 / 4 +
3 / 4 + 2
help(sin)
3 + 4 # + 2
sqrt(8) < 3
4 == sqrt(16)
z + 1
z <- 3
z + 1
x <- 2
x <- x + 1
y <- 4
z <- x + y
x <- x + 1
z <- z + x
x <- 2
x <- x + 1
y <- 4
z <- x + y
x <- x + 1
z <- z + x
x <- 2
x <- x + 1
y <- 4
z <- x + y
x <- x + 1
z <- z + x
set.seed(0)
a <- sample.int(10)
a <- sample.int(10)
a <- sample.int(10)
# enter your answer here
# Length is 10
c(0, a)
mean(a)
var(a)
std(a)
sd(a)
sum(a)
sum(1:100)
x <- 15
y <- c(1, 2, 3, 10, 100)
z <- x * y
sum(z)
seq(0, 10)
seq(5, -5)
seq(-3,3,0.1)
t <- c("mon", "tue", "wed", "thu", "fri", "sat")
m <- c(90, 80, 50, 20, 5, 20)
cbind(t, m)
t <- c("mon", "tue", "wed", "thu", "fri", "sat")
m <- c(90, 80, 50, 20, 5, 20)
study <- cbind(t, m)
View(study)
d <- as.data.frame(read.csv(~/DevWork/Uni-Project/machine-learning-with-R/data/persons.csv), header=TRUE, spe=", ")
d <- as.data.frame(read.csv(~DevWork/Uni-Project/machine-learning-with-R/data/persons.csv), header=TRUE, spe=", ")
d <- as.data.frame(read.csv(file = "~DevWork/Uni-Project/machine-learning-with-R/data/persons.csv"), header=TRUE, spe=", ")
d <- as.data.frame(read.csv(file = "~/DevWork/Uni-Project/machine-learning-with-R/data/persons.csv"), header=TRUE, spe=", ")
d <- as.data.frame(read.csv(file = "~/DevWork/Uni-Project/machine-learning-with-R/data/persons.csv"), header=TRUE, spe=", ")
View(d)
dim(d)
View(d)
dd <- as.data.frame(read.csv(file = "~/DevWork/Uni-Project/machine-learning-with-R/data/persons.csv"), header=TRUE, spe=", ", stringsAsFactors=FALSE)
View(dd)
d[d$name == "Robin", ]
d[d$name == "Robin" ]
d[d$name == "Robin", ]
t <- c("mon", "tue", "wed", "thu", "fri", "sat")
m <- c(90, 80, 50, 20, 5, 20)
study <- cbind(t, m)
d[d$name == "Robin" | d$age > 50,]
dim(d)
typeof(d)
col_names <- str(d)
str(d)
data <- as.data.frame(cbind(age, sex, height, weight))
age <- c(21, 35, 829, 2)
sex <- c("m", "f", "m", "e")
height <- c(181, 173, 171, 166)
weight <- c(69, 58, 75, 60)
data <- as.data.frame(cbind(age, sex, height, weight))
View(data)
data[date$age > 80 | data$age < 20]
data[date$age > 80 | data$age < 20, ]
data[data$age > 80 | data$age < 20, ]
data$age <- "NA"
if (data[data$age > 80 | data$age < 20, ]) {
data$age <- "NA"
}
age <- c(21, 35, 829, 2)
sex <- c("m", "f", "m", "e")
height <- c(181, 173, 171, 166)
weight <- c(69, 58, 75, 60)
data <- as.data.frame(cbind(age, sex, height, weight))
selection <- df$age < 20 | df$age > 80
selection <- data$age < 20 | date$age > 80
selection <- data$age < 20 | date$age > 80
age <- c(21, 35, 829, 2)
sex <- c("m", "f", "m", "e")
height <- c(181, 173, 171, 166)
weight <- c(69, 58, 75, 60)
data <- as.data.frame(cbind(age, sex, height, weight))
selection <- data$age < 20 | date$age > 80
selection <- data$age < 20 | data$age > 80
data$age[selection] <- "NA"
BMI <- (data$weight / (data$height/100))^2
BMI <- (data$weight / (data$height/100)^2)
BMI <- data$weight / (data$height/100)^2
BMI <- data$weight / ((data$height/100)^2)
data$BMI <- data$weight / ((data$height/100)^2)
data$BMI <- round(data$weight / ((data$height/100)^2))
data$BMI <- round(data$weight / ((data$height/100)^2), 2)
df$BMI <- round(data$weight / ((data$height / 100)^2), 2)
data$BMI <- round(data$weight / ((data$height / 100)^2), 2)
data$BMI <- round(data$weight / ((data$height / 100)^2), 2)
age <- c(21, 35, 829, 2)
sex <- c("m", "f", "m", "e")
height <- c(181, 173, 171, 166)
weight <- c(69, 58, 75, 60)
data <- as.data.frame(cbind(age, sex, height, weight))
typeof(data$height)
typeof(data$weight)
data <- data.frame(
age = c(21, 35, 829, 2),
sex = c('m', 'f', 'm', 'e'),
height = c(181, 173, 171, 166),
weight = c(69, 58, 75, 60)
)
typeof(data$weight)
selection <- data$age < 20 | data$age > 80
data$age[selection] <- "NA"
data$BMI <- round(data$weight / ((data$height / 100)^2), 2)
age <- c(21, 35, 829, 2)
sex <- c("m", "f", "m", "e")
height <- c(181, 173, 171, 166)
weight <- c(69, 58, 75, 60)
# Create the dataframe directly can solve the ERROR above
data <- data.frame(age = age, sex = sex, height = height, weight = weight)
typeof(data$weight)
selection <- data$age < 20 | data$age > 80
data$age[selection] <- "NA"
data$BMI <- round(data$weight / ((data$height / 100)^2), 2)
min(data$age)
max(data$age)
age <- c(21, 35, 829, 2)
sex <- c("m", "f", "m", "e")
height <- c(181, 173, 171, 166)
weight <- c(69, 58, 75, 60)
# Create the dataframe directly can solve the ERROR above
data <- data.frame(age = age, sex = sex, height = height, weight = weight)
min(data$age)
max(data$age)
typeof(data$weight)
selection <- data$age < 20 | data$age > 80
data$age[selection] <- "NA"
data$BMI <- round(data$weight / ((data$height / 100)^2), 2)
supply(data)
print(d)
d <- (1:10)
while(d % 2 == 1) {
d[1]
while(d[i] % 2 == 1) {
while(d[i] / 2 == 0) {
print(d[i])
i++
}
while(d[i] / 2 == 0) {
print(d[i])
i=i+1
}
while(d[i] % 2 == 0) {
i <- 1
while(d[i] % 2 == 0) {
d[i]
i <- 1
while(d[i] %% 2 == 0) {
print(d[i])
i=i+1
}
d[i]%%2
i=i+1
i <- i+1
i <- i+1
while(d[i] %% 2 == 0) {
print(d[i])
i <- i+1
}
i <- 1
while(i<11) {
print(d[i])
i <- i+1
}
i <- 1
while(i<11) {
if (i%%2==1){
print(d[i])
}
i <- i+1
}
for (i in 1:10) {
if(i%%2==1){
print(i)
}
}
v <- c(7:50)
for(i in v) {
if (i%%7) {
v[i] <- 2*v[i]
}
}
v <- c(7:50)
for(i in v) {
if (i%%7==0) {
v[i] <- 2*v[i]
}
}
for(i in v) {
if (i%%7==0) {
v[i] <- 2*v[i]
}
print(i)
}
v <- c(7:50)
for(i in v) {
if (i%%7==0) {
v[i] <- 2*v[i]
}
}
print(v)
count(v)
print(v)
dim(v)
print(v)
v <- c(7:50)
print(v)
for(i in v) {
if (i%%7==0) {
v[i] <- 2*v[i]
}
}
print(v)
v <- c(7:50)
for(i in v) {
print(i)
}
print(i%%7==0)
for(i in v) {
print(i%%7==0)
print(i)
}
v <- c(7:50)
for(i in v) {
if (i%%7==0) {
print(v[i-6])
}
}
v <- c(7:50)
for(i in v) {
if (i%%7==0) {
v[i-6] <- v[i-6]*2
}
}
print(v)
factorial <- function(num) {
sum = 1;
n <- num
while(n>0){
sum = sum * n
n = n-1
}
}
factorial(5)
print(factorial(5))
factorial <- function(num) {
sum <- 1;
n <- num
while(n>0){
sum = sum * n
n = n-1
}
}
print(factorial(5))
total <- 1;
factorial <- function(num) {
total <- 1;
print(total)
n <- num
while(n>0){
total = total * n
n = n-1
}
}
print(factorial(5))
factorial <- function(num) {
total <- 1;
print(total)
n <- num
print(n)
while(n>0){
total = total * n
n = n-1
}
}
print(factorial(5))
factorial <- function(num) {
total <- 1;
print(total)
n <- num
print(n)
while(n>0){
total = total * n
print(total)
n = n-1
print(total)
}
}
print(factorial(5))
factorial(5)
factorial(5)
factorial <- function(num) {
total <- 1;
#print(total)
n <- num
#print(n)
while(n>0){
total = total * n
#print(total)
n = n-1
#print(total)
}
}
factorial(5)
factorial <- function(num) {
total <- 1;
#print(total)
n <- num
#print(n)
while(n>0){
total = total * n
#print(total)
n = n-1
#print(total)
}
print(total)
}
factorial(5)
factorial <- function(num) {
total <- 1;
if (num == 0) {
print(total)
} else {
n <- num
while(n>0){
total = total * n
n = n-1
}
print(total)
}
}
factorial(5)
factorial(0)
factorial(1)
factorial(2)
factorial(3)
factorial(7)
result <- factorial(7)
result
result <- factorial(7)
set.seed(0)
a <- sample.int(10)
# enter your answer here
# Length is 10
c(0, a)
set.seed(0)
a <- sample.int(10)
# enter your answer here
# Length is 10
c(0, a)
# 5
```
set.seed(0)
a <- sample.int(10)
# enter your answer here
# Length is 10
c(0, a)
set.seed(0)
a <- sample.int(10)
a
set.seed(0)
a <- sample.int(10)
a
set.seed(1)
a <- sample.int(10)
a
set.seed(1)
a <- sample.int(10)
a
# enter your answer here
# Length is 10
c(0, a)
a[2]
set.seed(1)
a <- sample.int(10)
a
# enter your answer here
# Length is 10
new_a <- c(0, a)
a[2]
new_a[2]
# enter your answer here
length(a)
set.seed(1)
a <- sample.int(10)
a
# enter your answer here
length(a)
new_a <- c(0, a)
new_a[2]
study <- as.data.frame(V1 = t, V2 = m)
t <- c("mon", "tue", "wed", "thu", "fri", "sat")
m <- c(90, 80, 50, 20, 5, 20)
study <- as.data.frame(V1 = t, V2 = m)
study <- data.frame(V1 = t, V2 = m)
View(study)
i <- 1
while(i<11) {
if (i%%2==1){
print(i)
}
i <- i+1
}
